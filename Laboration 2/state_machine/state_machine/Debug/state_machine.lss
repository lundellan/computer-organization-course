
state_machine.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000012c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000d8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000012c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000015c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000019c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008f3  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000841  00000000  00000000  00000abf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000025e  00000000  00000000  00001300  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00001560  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000409  00000000  00000000  000015b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000070  00000000  00000000  000019bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001a2d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	08 d0       	rcall	.+16     	; 0xaa <main>
  9a:	1c c0       	rjmp	.+56     	; 0xd4 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <init_leds>:
	// Sets data direction to in for all buttons
	*ddrA |= 0b00000000;
	
	// Returns the reference to PINA
	return 0x20;
}
  9e:	84 b1       	in	r24, 0x04	; 4
  a0:	8e 6f       	ori	r24, 0xFE	; 254
  a2:	84 b9       	out	0x04, r24	; 4
  a4:	85 e2       	ldi	r24, 0x25	; 37
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	08 95       	ret

000000aa <main>:

int main(void)
{
  aa:	cf 93       	push	r28
  ac:	df 93       	push	r29
  ae:	1f 92       	push	r1
  b0:	cd b7       	in	r28, 0x3d	; 61
  b2:	de b7       	in	r29, 0x3e	; 62
    volatile uint8_t* leds = init_leds();
  b4:	f4 df       	rcall	.-24     	; 0x9e <init_leds>
  b6:	fc 01       	movw	r30, r24
{
	// Reference to DDRA
	volatile uint8_t* ddrA = 0x21;
	
	// Sets data direction to in for all buttons
	*ddrA |= 0b00000000;
  b8:	81 b1       	in	r24, 0x01	; 1
  ba:	81 b9       	out	0x01, r24	; 1
    volatile uint8_t* leds = init_leds();
	volatile uint8_t* buttons = init_buttons();
	
    while (1) 
    {
		volatile uint8_t button_state = *buttons;
  bc:	80 b1       	in	r24, 0x00	; 0
  be:	89 83       	std	Y+1, r24	; 0x01
		
		*leds ^= button_state >> 1;
  c0:	99 81       	ldd	r25, Y+1	; 0x01
  c2:	20 81       	ld	r18, Z
  c4:	96 95       	lsr	r25
  c6:	92 27       	eor	r25, r18
  c8:	90 83       	st	Z, r25
		
		while (*buttons == button_state);
  ca:	20 b1       	in	r18, 0x00	; 0
  cc:	99 81       	ldd	r25, Y+1	; 0x01
  ce:	29 17       	cp	r18, r25
  d0:	e1 f3       	breq	.-8      	; 0xca <main+0x20>
  d2:	f4 cf       	rjmp	.-24     	; 0xbc <main+0x12>

000000d4 <_exit>:
  d4:	f8 94       	cli

000000d6 <__stop_program>:
  d6:	ff cf       	rjmp	.-2      	; 0xd6 <__stop_program>
